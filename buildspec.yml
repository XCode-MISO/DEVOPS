version: 0.2

env:
  variables:
    POSTGRES_USER: "postgres_user"
    POSTGRES_PASSWORD: "postgres_pass"
    POSTGRES_DB: "postgres_db"
    POSTGRES_PORT: "5432"
    POSTGRES_HOST: "localhost"
    STATIC_TOKEN: "static_token"
    ENVIRONMENT: "test"
    SQLALCHEMY_DATABASE_URI: "sqlite:///:memory:"

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Instalando dependencias..."
      - pip install -r requirements.txt
  pre_build:
    commands:
      - echo "Ejecutando pruebas unitarias en entorno de prueba con SQLite..."
      - pytest tests/test_blacklist.py
      # CodeBuild se detiene aquÃ­ si pytest falla y marca el proceso como fallido
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 183295420248.dkr.ecr.us-east-2.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...      
      - docker build -t python_app .
      - docker tag python_app:latest 183295420248.dkr.ecr.us-east-2.amazonaws.com/python_app:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 183295420248.dkr.ecr.us-east-2.amazonaws.com/python_app:latest
      - echo Writing Image Definitions file...
      - printf '[{"name":"Container-app-python","imageUri":"183295420248.dkr.ecr.us-east-2.amazonaws.com/python_app:latest"}]' > imagedefinitions.json
      - printf '{"ImageURI":"183295420248.dkr.ecr.us-east-2.amazonaws.com/python_app:latest"}' > imageDetail.json
      - cat imagedefinitions.json      
artifacts:
  files:
    - '**/*'
    - imagedefinitions.json
    - imageDetail.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.json
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json    
